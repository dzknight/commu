<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="ÌöåÏõêÍ∞ÄÏûÖ ÌéòÏù¥ÏßÄÎ°ú, ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÍ≥† Ïó¨Í∂å ÏÇ¨ÏßÑÏùÑ ÏóÖÎ°úÎìúÌïòÏó¨ ÌöåÏõê Í∞ÄÏûÖÏùÑ ÏßÑÌñâÌï©ÎãàÎã§.">
    <title>ÌöåÏõêÍ∞ÄÏûÖ</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/join.css">
    <script src="${pageContext.request.contextPath}/resources/js/common.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    

</head>



<body>
    <!-- Ìè¨Ïä§Ìä∏Î™®Îçò Î∞∞Í≤Ω ÏöîÏÜåÎì§ -->
    <div class="postmodern-bg">
        <div class="floating-shape shape-triangle"></div>
        <div class="floating-shape shape-circle"></div>
        <div class="floating-shape shape-square"></div>
        <div class="floating-shape shape-pentagon"></div>
        <div class="grid-overlay"></div>
        <div class="neon-strips">
            <div class="strip strip-1"></div>
            <div class="strip strip-2"></div>
            <div class="strip strip-3"></div>
        </div>
    </div>

    <div class="postmodern-container">
        <!-- Ìó§Îçî ÏÑπÏÖò -->
        <header class="signup-header">
            <div class="header-content">
                <h1 class="main-title">
                    <span class="title-part-1">ÌöåÏõê</span>
                    <span class="title-part-2">Í∞ÄÏûÖ</span>
                    <span class="title-part-3">ÌéòÏù¥ÏßÄ</span>
                    <span class="title-part-4">ÏûÖÎãàÎã§</span>
                </h1>
                <div class="subtitle-container">
                    <p class="subtitle">Ïª§ÎÆ§ÎãàÌã∞ ÌöåÏõê Í∞ÄÏûÖÌéòÏù¥ÏßÄÏûÖÎãàÎã§</p>
                    <div class="decorative-elements">
                        <span class="deco-icon">üé≠</span>
                        <span class="deco-icon">üé®</span>
                        <span class="deco-icon">üöÄ</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Î©îÏù∏ Ìèº -->
        <main class="signup-main">
            <form action="${pageContext.request.contextPath}/join" method="post"
                  enctype="multipart/form-data" id="signUpForm" 
                  data-context-path="${pageContext.request.contextPath}"
                  class="postmodern-form">
                
                <!-- ÏßÑÌñâ Îã®Í≥Ñ ÌëúÏãú -->
                <div class="progress-indicator">
                    <div class="progress-bar">
                        <div class="progress-fill"></div>
                    </div>
                    <div class="progress-text">
                        <span class="current-step">01</span>
                        <span class="divider">/</span>
                        <span class="total-steps">05</span>
                        <span class="step-label">ÎîîÏßÄÌÑ∏ Í≥ÑÏ†ï ÎßåÎì§Í∏∞</span>
                    </div>
                </div>

                <!-- ÏÑπÏÖò 1: Í∏∞Î≥∏ Ï†ïÎ≥¥ -->
                <section class="form-section identity-section">
                    <div class="section-header">
                        <h2 class="section-title">
                            <span class="section-number">01</span>
                            <span class="section-text">Ï≤´Í±∏Ïùå</span>
                            <div class="title-decoration"></div>
                        </h2>
                    </div>

                    <div class="form-grid">
                        <!-- ÏïÑÏù¥Îîî ÏûÖÎ†• -->
                        <div class="form-group neon-purple">
                            <label for="userId" class="form-label">
                                <i class="fas fa-user-secret"></i>
                                ÎîîÏßÄÌÑ∏ ÎãâÎÑ§ÏûÑÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî
                            </label>
                            <div class="input-container">
                                <input type="text" name="userId" id="userId" 
                                       maxlength="10" placeholder="Ïú†ÎãàÌÅ¨Ìïú ÏïÑÏù¥ÎîîÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî"
                                       pattern="[a-zA-Z0-9]{4,10}" required
                                       class="postmodern-input">
                                <button type="button" id="idCheckBtn" class="check-btn">
                                    <span>Í≤ÄÏ¶ù</span>
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                            <div class="validation-message" id="idCheckStatus"></div>
                        </div>

                        <!-- ÎπÑÎ∞ÄÎ≤àÌò∏ -->
                        <div class="form-group neon-cyan">
                            <label for="userPassword" class="form-label">
                                <i class="fas fa-lock"></i>
                                Secret Code
                            </label>
                            <div class="input-container">
                                <input type="password" name="userPassword" id="userPassword"
                                       placeholder="ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî" required maxlength="12"
                                       class="postmodern-input">
                                <div class="password-strength">
                                    <div class="strength-bar"></div>
                                </div>
                            </div>
                            <div class="validation-message" id="passwordCheck1"></div>
                        </div>

                        <!-- ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏ -->
                        <div class="form-group neon-pink">
                            <label for="userPasswordConfirm" class="form-label">
                                <i class="fas fa-shield-alt"></i>
                                ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏûÖÎ†•
                            </label>
                            <div class="input-container">
                                <input type="password" name="userPasswordConfirm" 
                                       id="userPasswordConfirm" placeholder="ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Îã§Ïãú ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                                       required maxlength="12" class="postmodern-input">
                            </div>
                            <div class="validation-message" id="passwordCheck2"></div>
                        </div>

                        <!-- Ïù¥Î¶Ñ -->
                        <div class="form-group neon-yellow">
                            <label for="userName" class="form-label">
                                <i class="fas fa-signature"></i>
                                Ïù¥Î¶Ñ ÏûÖÎ†•
                            </label>
                            <div class="input-container">
                                <input type="text" name="userName" id="userName" placeholder="Ïã§Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" required maxlength="10"
                                       pattern="[Í∞Ä-Ìû£]{2,10}" class="postmodern-input">
                            </div>
                        </div>
                    </div>
                </section>

                <!-- ÏÑπÏÖò 2: ÏúÑÏπò Ï†ïÎ≥¥ -->
                <section class="form-section location-section">
                    <div class="section-header">
                        <h2 class="section-title">
                            <span class="section-number">02</span>
                            <span class="section-text">Ïñ¥Îîî ÏÇ¥Í≥† ÏûàÎÇòÏöî?</span>
                        </h2>

                    </div>

                    <div class="form-grid">
                        <!-- Ïö∞Ìé∏Î≤àÌò∏ -->
                        <div class="form-group neon-green">
                            <label for="zipCode" class="form-label">
                                <i class="fas fa-map-pin"></i>
                                Ïö∞Ìé∏Î≤àÌò∏Ï∞æÍ∏∞
                            </label>
                            <div class="input-container zipcode-container">
                                <input type="text" name="zipCode" id="zipCode" 
                                       placeholder="Find your zone..." readonly required
                                       class="postmodern-input">
                                <button type="button" class="search-btn" onclick="searchZipcode()">
                                    <span>Ï∞æÍ∏∞</span>
                                    <i class="fas fa-satellite-dish"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Ï£ºÏÜå -->
                        <div class="form-group neon-orange full-width">
                            <label for="address" class="form-label">
                                <i class="fas fa-home"></i>
                                ÎãπÏã†Ïùò Í±∞Ï£ºÏßÄÎäî?
                            </label>
                            <div class="address-inputs">
                                <input type="text" id="address" placeholder="ÏûêÎèôÏûÖÎ†•ÎêòÎäî ÌïÑÎìúÏûÖÎãàÎã§"
                                       readonly required class="postmodern-input address-main">
                                <input type="text" name="detailAddress" id="detailAddress" 
                                       placeholder="ÏÉÅÏÑ∏Ï£ºÏÜåÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî" required maxlength="30"
                                       class="postmodern-input address-detail">
                                <input type="hidden" name="address" id="fullAddress">
                            </div>
                        </div>
                    </div>
                </section>

                <!-- ÏÑπÏÖò 3: Ïó∞ÎùΩÏ≤ò -->
                <section class="form-section contact-section">
                    <div class="section-header">
                        <h2 class="section-title">
                            <span class="section-number">03</span>
                            <span class="section-text">Ïó∞ÎùΩÏùÑ ÏßÄÏÜçÌïòÍ∏∞ ÏúÑÌï¥ÏÑú</span>
                            <div class="title-decoration"></div>
                        </h2>
                    </div>

                    <div class="form-grid">
                        <!-- Ïù¥Î©îÏùº -->
                        <div class="form-group neon-purple full-width">
                            <label for="userEmail" class="form-label">
                                <i class="fas fa-at"></i>
                                ÎîîÏßÄÌÑ∏ Ïù¥Î©îÏùº Ï£ºÏÜå
                            </label>
                            <div class="email-container">
                                <div class="email-input-group">
                                    <input type="text" name="email_id" id="email_id" 
                                           placeholder="Your ID..." required maxlength="10"
                                           class="postmodern-input email-id">
                                    <span class="email-separator">@</span>
                                    <select name="emailDomain" id="email_domain" required
                                            class="postmodern-select">
                                        <option value="naver.com">naver.com</option>
                                        <option value="gmail.com">gmail.com</option>
                                        <option value="daum.net">daum.net</option>
                                        <option value="nate.com">nate.com</option>
                                        <option value="yahoo.com">yahoo.com</option>
                                        <option value="hanmail.net">hanmail.net</option>
                                        <option value="hotmail.com">hotmail.com</option>
                                        <option value="kakao.com">kakao.com</option>
                                    </select>
                                    <input type="hidden" name="email_domain" id="email_domain_input" value="naver.com">
                                    <input type="hidden" name="email" id="address" value="dzknight@naver.com">
                                    <input type="text" name="fullEmail" id="fullEmail">
                                    <button type="button" id="emailAuthBtn" class="verify-btn">
                                        <span>ÏΩîÎìú Ï†ÑÏÜ°</span>
                                        <i class="fas fa-paper-plane"></i>
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Ïù¥Î©îÏùº Ïù∏Ï¶ù ÏÑπÏÖò -->
                            <div class="email-auth-section" id="emailAuthSection">
                                <div class="auth-header">
                                    <h4>üîê Ïù¥Î©îÏùº Ïù∏Ï¶ù Ìè¨ÌÉà</h4>
                                    <div class="timer-display" id="timer">05:00</div>
                                </div>
                                <div class="auth-input-container">
                                    <input type="text" id="authCode" name="authCode" 
                                           placeholder="6ÏûêÎ¶¨ Ïà´ÏûêÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî" required
                                           class="postmodern-input auth-input">
                                    <button type="button" id="verifyCodeBtn" class="verify-btn">
                                        <span>Ïù∏Ï¶ùÎ≤ÑÌäº</span>
                                        <i class="fas fa-check"></i>
                                    </button>
                                </div>
                                <div id="emailAuthResult" class="auth-result"></div>
                            </div>
                        </div>

                        <!-- Ï†ÑÌôîÎ≤àÌò∏ -->
                        <div class="form-group neon-cyan">
                            <label for="phoneNum" class="form-label">
                                <i class="fas fa-mobile-alt"></i>
                                Ìú¥ÎåÄÌè∞ Î≤àÌò∏
                            </label>
                            <div class="phone-container">
                                <input type="text" id="phoneNum" name="userPhoneNum" maxlength="11" placeholder="Ïà´ÏûêÎßå ÏûÖÎ†•" required >
                            </div>
                        </div>

                        <!-- ÏÉùÎÖÑÏõîÏùº -->
                        <div class="form-group neon-pink">
                            <label for="birthdate" class="form-label">
                                <i class="fas fa-birthday-cake"></i>
                                ÏÉùÎÖÑÏõîÏùº
                            </label>
                            <div class="input-container">
                                <input type="date" name="birthdate" id="birthdate" required
                                       class="postmodern-input date-input">
                            </div>
                        </div>
                    </div>
                </section>

                <!-- ÏÑπÏÖò 4: ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ -->
                <section class="form-section avatar-section">
                    <div class="section-header">
                        <h2 class="section-title">
                            <span class="section-number">04</span>
                            <span class="section-text">ÎîîÏßÄÌÑ∏ ÏïÑÎ∞îÌÉÄÎ•º Îì±Î°ùÌïòÏÑ∏Ïöî</span>
                            <div class="title-decoration"></div>
                        </h2>
                    </div>

                    <div class="avatar-container">
                        <div class="upload-zone" id="uploadZone">
                            <div class="upload-content">
                                <div class="file-info">
                                    <span>JPEG, PNG ‚Ä¢ ÏµúÎåÄ 10MB</span>
                                </div>
                            </div>
                            <input type="file" id="profileImage" name="profileImageFile" accept="image/jpeg,image/jpg,image/png"
                                   class="file-input" required>
                        </div>

                        <div class="ai-options">
                            <div class="ai-toggle">
                                <label class="toggle-container">
                                    <input type="checkbox" id="enableAiConvert" checked>
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">AI ÏÇ¨ÏßÑÍ∑úÍ≤© Î≥¥Ï†ï</span>
                                </label>
                            </div>
                            <select id="aiProvider" class="postmodern-select">
                                <option value="idphoto">IdPhoto.AI (Ï∂îÏ≤ú)</option>
                            </select>
                        </div>

                        <div class="image-preview" id="imagePreview" style="display: none;">
                            <img id="photoPreview" alt="Profile preview">
                            <div class="preview-actions">
                                <button type="button" id="restoreOriginal" class="action-btn">
                                    <i class="fas fa-undo"></i>
                                    Restore Original
                                </button>
                            </div>
                        </div>

                        <div id="photoValidation" class="validation-display"></div>
                    </div>
                </section>

                <!-- ÏÑπÏÖò 5: Ï†úÏ∂ú -->
                <section class="form-section submit-section">
                    <div class="section-header">
                        <h2 class="section-title">
                            <span class="section-number">05</span>
                            <span class="section-text">ÎßàÏßÄÎßâ Îã®Í≥Ñ</span>
                            <div class="title-decoration"></div>
                        </h2>
                    </div>

                    <div class="submit-container">
                        <div class="action-buttons">
                            <button type="reset" id="cancelBtn" class="secondary-btn">
                                <i class="fas fa-redo"></i>
                                <span>Ï¥àÍ∏∞Ìôî</span>
                            </button>
                            <button type="submit" id="submitBtn" class="primary-btn" >
                                <i class="fas fa-rocket"></i>
                                <span>ÌöåÏõêÍ∞ÄÏûÖ!</span>
                                <div class="btn-glow"></div>
                            </button>
                        </div>
                    </div>
                </section>
            </form>
        </main>

        <!-- Ìë∏ÌÑ∞ -->
        <footer class="signup-footer">
            <div class="footer-content">
                <p>¬© 2025 Ìè¨Ïä§Ìä∏Î™®Îçò Signup</p>
                <div class="footer-icons">
                    <span>üé®</span>
                    <span>üöÄ</span>
                    <span>üåà</span>
                </div>
            </div>
        </footer>
    </div>

    <script>
// jQuery Í∏∞Î∞ò Í∏∞Îä•Îì§
$(document).ready(function(){
    let isIdChecked = false;
    
    // ÏïÑÏù¥Îîî Ï§ëÎ≥µÏ≤¥ÌÅ¨
    $("#idCheckBtn").click(function(){
        var userId = $("#userId").val().trim();
        
        if(userId === "") {
            alert("ÏÇ¨Ïö©Ìï† ÏïÑÏù¥ÎîîÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî");
            $("#userId").focus();
            return false;
        }
        
        // ÏïÑÏù¥Îîî Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ (ÏòÅÎ¨∏, Ïà´ÏûêÎßå ÌóàÏö©)
        var idPattern = /^[a-zA-Z0-9]+$/;
        if(!idPattern.test(userId)) {
            alert("ÏïÑÏù¥ÎîîÎäî ÏòÅÎ¨∏Í≥º Ïà´ÏûêÎßå ÏÇ¨Ïö© Í∞ÄÎä•Ìï©ÎãàÎã§.");
            $("#userId").focus();
            return false;
        }
        
        $.ajax({
            type: "POST",
            url: "${pageContext.request.contextPath}/userIdCheck",
            data: { userId: userId },
            dataType: "json",
            beforeSend: function() {
                $("#idCheckBtn").prop("disabled", true).text("ÌôïÏù∏Ï§ë...");
            },
            success: function(data){
                if(data.count === 0) {
                    $("#idCheckStatus").text("ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÏïÑÏù¥ÎîîÏûÖÎãàÎã§.").css("color", "green");
                    isIdChecked = true;
                    alert("ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÏïÑÏù¥ÎîîÏûÖÎãàÎã§.");
                } else {
                    $("#idCheckStatus").text("Ïù¥ÎØ∏ ÏÇ¨Ïö© Ï§ëÏù∏ ÏïÑÏù¥ÎîîÏûÖÎãàÎã§.").css("color", "red");
                    isIdChecked = false;
                    alert("Ïù¥ÎØ∏ ÏÇ¨Ïö© Ï§ëÏù∏ ÏïÑÏù¥ÎîîÏûÖÎãàÎã§.");
                }
            },
            error: function(xhr, status, error){
                console.error("AJAX Ïò§Î•ò:", error);
                alert("ÏÑúÎ≤ÑÏôÄ ÌÜµÏã† Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
                isIdChecked = false;
            },
            complete: function() {
                $("#idCheckBtn").prop("disabled", false).text("Ï§ëÎ≥µÏ≤¥ÌÅ¨");
                updateSubmitButtonState();
            }
        });
    });
    
    // ÎπÑÎ∞ÄÎ≤àÌò∏ Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    $('#userPassword').keyup(function() {
        let password = $(this).val();
        
        if (password === '') {
            $('#passwordCheck1').html('<b style="font-size:14px; color:red;">[ÏÇ¨Ïö©Ìï† ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî]</b>');
            isPasswordValid = false;
            updateSubmitButtonState();
            return;
        }
        
        // ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÇ¨Ïù¥Îìú ÎπÑÎ∞ÄÎ≤àÌò∏ Í≤ÄÏ¶ù
        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/;
        if (passwordRegex.test(password)) {
            $('#passwordCheck1').html('<b style="font-size:14px; color:green;">[ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÎπÑÎ∞ÄÎ≤àÌò∏ÏûÖÎãàÎã§.]</b>');
            isPasswordValid = true;
        } else {
            $('#passwordCheck1').html('<b style="font-size:14px; color:red;">[ÎπÑÎ∞ÄÎ≤àÌò∏Îäî ÏòÅÎ¨∏, Ïà´Ïûê, ÌäπÏàòÎ¨∏ÏûêÎ•º Ìè¨Ìï®Ìï¥ 8Ïûê Ïù¥ÏÉÅÏù¥Ïñ¥Ïïº Ìï©ÎãàÎã§.]</b>');
            isPasswordValid = false;
        }
        updateSubmitButtonState();
    });
    
    // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏
    $('#userPasswordConfirm').keyup(function() {
        let confirmPwd = $(this).val();
        let pwd = $('#userPassword').val();
        
        if (confirmPwd === '') {
            $('#passwordCheck2').html('<b style="font-size:14px; color:blue;">[ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏ÏùÄ ÌïÑÏàò Ï†ïÎ≥¥ÏûÖÎãàÎã§.]</b>');
            isPasswordConfirmed = false;
        } else if (confirmPwd !== pwd) {
            $('#passwordCheck2').html('<b style="font-size:14px; color:red;">[ÏûÖÎ†•Ìïú ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.]</b>');
            isPasswordConfirmed = false;
        } else {
            $('#passwordCheck2').html('<b style="font-size:14px; color:green;">[ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌï©ÎãàÎã§.]</b>');
            isPasswordConfirmed = true;
        }
        updateSubmitButtonState();
    });
    
    // Ìèº Ï†úÏ∂ú Ïãú ÏµúÏ¢Ö Í≤ÄÏ¶ù
    $('#signUpForm').submit(function(event) {
        // ÌïÑÏàò Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
        if (!isPasswordValid) {
            alert('ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Ïú†Ìö®ÌïòÏßÄ ÏïäÏäµÎãàÎã§.');
            event.preventDefault();
            return false;
        }
        
        if (!isPasswordConfirmed) {
            alert('ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏Ïù¥ ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.');
            event.preventDefault();
            return false;
        }
        
        // ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑÏù¥ ÏóÖÎ°úÎìúÎêòÏóàÏßÄÎßå Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞
        const profileImage = document.getElementById('profileImage');
        if (profileImage && profileImage.files.length > 0 && !isValidPhoto) {
            alert('ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑÏù¥ Ïó¨Í∂åÏÇ¨ÏßÑ Í∑úÍ≤©Ïóê ÎßûÏßÄ ÏïäÏäµÎãàÎã§.');
            event.preventDefault();
            return false;
        }
        
        return true;
    });
});

</script>

<script>

// Ïù¥Î©îÏùº Ïù∏Ï¶ùÎ≤àÌò∏ Ï†ÑÏÜ°
$('#emailAuthBtn1').click(function() {
    //alert("ss");
    const email = $('#fullEmail').val();
    alert(email);
    if (!email) {
        alert('Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
        return;
    }
    
    $.ajax({
        url: '${pageContext.request.contextPath}/mailsend',
        type: 'POST',
        data: { email: email },
        success: function(response) {
        	if (response.success) {
                $('#emailAuthResult').html('<div class="success">' + response.message + '</div>');
                $('#authCodeSection').show();
                $('#emailAuthBtn').text('Ïû¨Ï†ÑÏÜ°').removeClass('btn-primary').addClass('btn-secondary');
                
                // 5Î∂Ñ ÌÉÄÏù¥Î®∏ ÏãúÏûë
                startTimer(300);
            } else {
                $('#emailAuthResult').html('<div class="error">' + response.message + '</div>');
            }
        },
        error: function(xhr, status, error) {
            console.error('AJAX Ïò§Î•ò:', xhr, status, error); // ÎîîÎ≤ÑÍπÖÏö©
            
            let errorMessage = 'Ïù∏Ï¶ùÎ≤àÌò∏ Ï†ÑÏÜ° Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
            if (status === 'timeout') {
                errorMessage = 'ÏöîÏ≤≠ ÏãúÍ∞ÑÏù¥ Ï¥àÍ≥ºÎêòÏóàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.';
            } else if (xhr.status === 404) {
                errorMessage = 'ÏÑúÎ≤ÑÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌïòÏÑ∏Ïöî.';
            } else if (xhr.status === 500) {
                errorMessage = 'ÏÑúÎ≤Ñ ÎÇ¥Î∂Ä Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
            }
            
            $('#emailAuthResult').html('<div class="error">' + errorMessage + '</div>');
            alert(errorMessage);
        },
        complete: function() {
            // Î≤ÑÌäº Îã§Ïãú ÌôúÏÑ±Ìôî
            $('#emailAuthBtn').prop('disabled', false);
            if ($('#emailAuthBtn').text() === 'Ï†ÑÏÜ°Ï§ë...') {
                $('#emailAuthBtn').text('Ïù∏Ï¶ùÎ©îÏùº Î≥¥ÎÇ¥Í∏∞');
            }
        }
    });
});

// Ïù∏Ï¶ùÎ≤àÌò∏ Í≤ÄÏ¶ù
$('#verifyCodeBtn').click(function() {
    const email = $('#userEmail').val();
    const code = $('#authCode').val();
    
    if (!code) {
        alert('Ïù∏Ï¶ùÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
        return;
    }
    
    $.ajax({
        url: '${pageContext.request.contextPath}/verify-email-code',
        type: 'POST',
        data: { 
            email: email,
            code: code 
        },
        success: function(response) {
            if (response.success) {
                $('#emailAuthResult').html('<div class="success">' + response.message + '</div>');
                $('#authCodeSection').hide();
                $('#sendEmailBtn').prop('disabled', true).text('Ïù∏Ï¶ùÏôÑÎ£å');
                $('#userEmail').prop('readonly', true);
                emailVerified = true;
                updateSubmitButton();
                clearInterval(timerInterval);
            } else {
                $('#emailAuthResult').html('<div class="error">' + response.message + '</div>');
            }
        },
        error: function() {
            $('#emailAuthResult').html('<div class="error">Ïù∏Ï¶ù Ï≤òÎ¶¨ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.</div>');
        }
    });
});

// ÌÉÄÏù¥Î®∏ ÏãúÏûë
function startTimer(duration) {
    clearInterval(timerInterval);
    let timer = duration;
    
    timerInterval = setInterval(function() {
        const minutes = parseInt(timer / 60, 10);
        const seconds = parseInt(timer % 60, 10);
        
        const display = minutes + ":" + (seconds < 10 ? "0" + seconds : seconds);
        $('#timer').text('ÎÇ®ÏùÄ ÏãúÍ∞Ñ: ' + display);
        
        if (--timer < 0) {
            clearInterval(timerInterval);
            $('#timer').text('Ïù∏Ï¶ùÏãúÍ∞ÑÏù¥ ÎßåÎ£åÎêòÏóàÏäµÎãàÎã§. Ïû¨Ï†ÑÏÜ°Ìï¥Ï£ºÏÑ∏Ïöî.');
            $('#authCodeSection').hide();
        }
    }, 1000);
}

// ÌöåÏõêÍ∞ÄÏûÖ Î≤ÑÌäº ÌôúÏÑ±Ìôî Ï≤¥ÌÅ¨
//function updateSubmitButton() {
//    if (emailVerified) {
//        $('#submitBtn').removeClass('disabled').prop('disabled', false);
//   }
//}
 
// Ìèº Ï†úÏ∂ú Ïãú Ïù¥Î©îÏùº Ïù∏Ï¶ù ÌôïÏù∏
/* $('#signUpForm').submit(function(e) {
    if (!emailVerified) {
        e.preventDefault();
        alert('Ïù¥Î©îÏùº Ïù∏Ï¶ùÏùÑ ÏôÑÎ£åÌï¥Ï£ºÏÑ∏Ïöî.');
        return false;
    }
}); */


let emailVerified = false;
// DOMÏù¥ ÏôÑÏ†ÑÌûà Î°úÎìúÎêú ÌõÑ Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä Ïã§ÌñâÎêòÎèÑÎ°ù Ìï©ÎãàÎã§.
document.addEventListener('DOMContentLoaded', function() {

    // Ï†ÑÏÜ° Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑàÎ•º Îì±Î°ùÌï©ÎãàÎã§.
    document.getElementById('emailAuthBtn').addEventListener('click', function() {
        // ÏûÖÎ†• ÌïÑÎìúÏóêÏÑú Ïù¥Î©îÏùº Ï£ºÏÜå, Ï†úÎ™©, Î©îÏãúÏßÄÎ•º Í∞ÄÏ†∏ÏòµÎãàÎã§.
        const address = document.getElementById('fullEmail').value;
        // Ïù¥Î©îÏùº Ïù∏Ï¶ùÏö© Í∏∞Î≥∏ Ï†úÎ™©Í≥º Î©îÏãúÏßÄ ÏÑ§Ï†ï
        const title = "Ïù¥Î©îÏùº Ïù∏Ï¶ù";
        const message = "Ïù¥Î©îÏùº Ïù∏Ï¶ùÏùÑ ÏôÑÎ£åÌï¥Ï£ºÏÑ∏Ïöî";
        alert(address);
       
        // Ï†ÑÏÜ°Ìï† Îç∞Ïù¥ÌÑ∞Î•º Í∞ùÏ≤¥ ÌòïÌÉúÎ°ú ÎßåÎì≠ÎãàÎã§.
        const mailData = {
            address: address,
            title: title,
            message: message
        };
        alert("Ïù¥Î©îÏùº Ï†ÑÏÜ° Î≤ÑÌäºÏù¥ ÌÅ¥Î¶≠ÎêòÏóàÏäµÎãàÎã§.");
        const responseSpan = document.getElementById('responseMessage');
        responseSpan.innerText = 'Ï†ÑÏÜ° Ï§ë...'; // ÏÇ¨Ïö©ÏûêÏóêÍ≤å ÏßÑÌñâ ÏÉÅÌô©ÏùÑ ÏïåÎ¶ΩÎãàÎã§.
        // fetch APIÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏÑúÎ≤ÑÏóê POST ÏöîÏ≤≠ÏùÑ Î≥¥ÎÉÖÎãàÎã§.
        fetch('${pageContext.request.contextPath}/mailsend', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json' // Ï†ÑÏÜ°ÌïòÎäî Îç∞Ïù¥ÌÑ∞Í∞Ä JSON ÌòïÏãùÏûÑÏùÑ Î™ÖÏãúÌï©ÎãàÎã§.
            },
            body: JSON.stringify(mailData) // JavaScript Í∞ùÏ≤¥Î•º JSON Î¨∏ÏûêÏó¥Î°ú Î≥ÄÌôòÌï©ÎãàÎã§.
        })
        .then(response => {
            if (!response.ok) {
                // ÏÑúÎ≤Ñ ÏùëÎãµÏù¥ Ïã§Ìå®Ìïú Í≤ΩÏö∞(Ïòà: 500 ÏóêÎü¨) ÏòàÏô∏Î•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.
                throw new Error('ÏÑúÎ≤Ñ ÏùëÎãµÏù¥ Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.');
            }
            return response.json(); // ÏÑúÎ≤ÑÍ∞Ä Î≥¥ÎÇ∏ JSON ÏùëÎãµÏùÑ ÌååÏã±Ìï©ÎãàÎã§.
        })
        .then(data => {
            // ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏùëÎãµÏùÑ Î∞õÏïòÏùÑ Îïå Î©îÏãúÏßÄÎ•º ÌëúÏãúÌï©ÎãàÎã§.
            responseSpan.style.color = data.success ? 'blue' : 'red';
            responseSpan.innerText = data.message;
            
            // ÏÑ±Í≥µ Ïãú ÏûÖÎ†• ÌïÑÎìúÎ•º ÎπÑÏõÅÎãàÎã§.
            if (data.success) {
                document.getElementById('mailForm').reset();
            }
        })
        .catch(error => {
            // ÎÑ§Ìä∏ÏõåÌÅ¨ Ïò§Î•òÎÇò ÏúÑÏùò then Î∏îÎ°ùÏóêÏÑú Î∞úÏÉùÌïú ÏòàÏô∏Î•º Ï≤òÎ¶¨Ìï©ÎãàÎã§.
            console.error('Error:', error);
            responseSpan.style.color = 'red';
            responseSpan.innerText = 'Î©îÏùº Ï†ÑÏÜ° Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
        });
    });
});
</script>


<script>
let isValidPhoto = false;
let isIdChecked = false;
let isPasswordValid = false;
let isPasswordConfirmed = false;
//Ïù¥Î©îÏùºÍ≤ÄÏ¶ùÏó¨Î∂Ä

//ÏãúÍ∞ÑÍ∞ÑÍ≤©
let timerInterval;

//AI Ïó¨Í∂åÏÇ¨ÏßÑ Î≥ÄÌôòÏùÑ ÏúÑÌïú Ï†ÑÏó≠ Î≥ÄÏàò
let isProcessing = false;
let originalFile = null;

// IdPhoto.AI API ÏÑ§Ï†ï
const IDPHOTO_API_CONFIG = {
    apiKey: f8qfQmSMPkXz3MA9,
    apiSecret: 7Z1bK0YSCwQnq2Oz5JxldDmtA8bpXq9qMR7DdKnPwd6Z9uyj5opSJv8Nw7ltsC9g,
    endpoint: 'https://api.idphoto.ai/v2/makeIdPhoto',
    specCode: 'korea-passport' // ÌïúÍµ≠ Ïó¨Í∂å Í∑úÍ≤©
};



// ÌååÏùºÏùÑ Base64Î°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
function fileToBase64(file) {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => {
            const base64 = reader.result.split(',')[1]; // data:image/jpeg;base64, Î∂ÄÎ∂Ñ Ï†úÍ±∞
            resolve(base64);
        };
        reader.onerror = reject;
        reader.readAsDataURL(file);
    });
}

// IdPhoto.AI APIÎ•º ÏÇ¨Ïö©Ìïú Ïó¨Í∂åÏÇ¨ÏßÑ Î≥ÄÌôò
async function convertWithIdPhotoAI(file) {
    try {
        const imageBase64 = await fileToBase64(file);
        
        const requestBody = {
            apiKey: f8qfQmSMPkXz3MA9,
            apiSecret: 7Z1bK0YSCwQnq2Oz5JxldDmtA8bpXq9qMR7DdKnPwd6Z9uyj5opSJv8Nw7ltsC9g,
            imageBase64: imageBase64,
            specCode: IDPHOTO_API_CONFIG.specCode
        };

        const response = await fetch(IDPHOTO_API_CONFIG.endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        });

        if (!response.ok) {
            throw new Error(`API Ìò∏Ï∂ú Ïã§Ìå®: ${response.status}`);
        }

        const result = await response.json();
        
        if (result.issues && result.issues.length > 0) {
            showValidationMessage(`ÏÇ¨ÏßÑ ÌíàÏßà Î¨∏Ï†ú: ${result.issues.join(', ')}`, false);
            return null;
        }

        return result.idPhotoUrl;
        
    } catch (error) {
        console.error('IdPhoto.AI API Ïò§Î•ò:', error);
        throw error;
    }
}

// Ïù¥ÎØ∏ÏßÄ URLÏùÑ File Í∞ùÏ≤¥Î°ú Î≥ÄÌôò
async function urlToFile(url, filename = 'passport-photo.jpg') {
    try {
        const response = await fetch(url);
        const blob = await response.blob();
        return new File([blob], filename, { type: 'image/jpeg' });
    } catch (error) {
        console.error('URL to File Î≥ÄÌôò Ïò§Î•ò:', error);
        throw error;
    }
}

// Î≥ÄÌôòÎêú Ïù¥ÎØ∏ÏßÄÎ•º ÎØ∏Î¶¨Î≥¥Í∏∞Ïóê ÌëúÏãú
function displayConvertedImage(imageUrl) {
    const photoPreview = document.getElementById('photoPreview');
    if (photoPreview) {
        photoPreview.src = imageUrl;
        photoPreview.style.display = 'block';
    }
}

// Î°úÎî© ÏÉÅÌÉú ÌëúÏãú
function showLoadingState(isLoading) {
    const validationDiv = document.getElementById('photoValidation');
    const submitBtn = document.querySelector('button[type="submit"]');
    
    if (isLoading) {
        validationDiv.innerHTML = '<div class="loading">üîÑ AIÍ∞Ä Ïó¨Í∂åÏÇ¨ÏßÑÏúºÎ°ú Î≥ÄÌôò Ï§ëÏûÖÎãàÎã§...</div>';
        if (submitBtn) submitBtn.disabled = true;
    }
}

//Í∏∞Ï°¥ ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏàòÏ†ï
document.addEventListener('DOMContentLoaded', function() {
    const profileImageInput = document.getElementById('profileImage');
    
    if (profileImageInput) {
        profileImageInput.addEventListener('change', async function(e) {
            const file = e.target.files[0];
            const photoPreview = document.getElementById('photoPreview');
            const photoValidation = document.getElementById('photoValidation');
            const enableAiConvert = document.getElementById('enableAiConvert');
            const aiProvider = document.getElementById('aiProvider');
            
            if (!file) {
                if (photoPreview) photoPreview.style.display = 'none';
                if (photoValidation) photoValidation.innerHTML = '';
                isValidPhoto = false;
                return;
            }

            // ÏõêÎ≥∏ ÌååÏùº Ï†ÄÏû•
            originalFile = file;
            
            // ÌååÏùº ÌòïÏãù Í≤ÄÏ¶ù
            const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];
            if (!allowedTypes.includes(file.type)) {
                showValidationMessage('JPEG ÎòêÎäî PNG ÌååÏùºÎßå ÏóÖÎ°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§.', false);
                return;
            }

            // ÌååÏùº ÌÅ¨Í∏∞ Í≤ÄÏ¶ù (10MB Ï†úÌïú - AI Ï≤òÎ¶¨Ïö©)
            const maxSize = 10 * 1024 * 1024;
            if (file.size > maxSize) {
                showValidationMessage('ÌååÏùº ÌÅ¨Í∏∞Í∞Ä 10MBÎ•º Ï¥àÍ≥ºÌï©ÎãàÎã§.', false);
                return;
            }

            // AI Î≥ÄÌôò Ïó¨Î∂Ä ÌôïÏù∏
            if (enableAiConvert && enableAiConvert.checked) {
                // AI Î≥ÄÌôò ÏãúÏûë
                isProcessing = true;
                showLoadingState(true);
                
                try {
                    let convertedImageUrl = null;
                    const selectedProvider = aiProvider ? aiProvider.value : 'segmind';
                    
                    if (selectedProvider === 'idphoto') {
                        // IdPhoto.AI ÏÇ¨Ïö©
                        try {
                            convertedImageUrl = await convertWithIdPhotoAI(file);
                        } catch (error) {
                            console.warn('IdPhoto.AI Ïã§Ìå®, SegmindÎ°ú Ï†ÑÌôò:', error);
                        }
                    }
                    
                    // IdPhoto.AI Ïã§Ìå® Ïãú ÎòêÎäî Segmind ÏÑ†ÌÉù Ïãú
                    if (!convertedImageUrl) {
                        convertedImageUrl = await convertWithSegmindAI(file);
                    }
                    
                    if (convertedImageUrl) {
                        // Î≥ÄÌôòÎêú Ïù¥ÎØ∏ÏßÄ ÌëúÏãú
                        displayConvertedImage(convertedImageUrl);
                        
                        // Î≥ÄÌôòÎêú Ïù¥ÎØ∏ÏßÄÎ•º File Í∞ùÏ≤¥Î°ú Î≥ÄÌôòÌïòÏó¨ Í≤ÄÏ¶ù
                        const convertedFile = await urlToFile(convertedImageUrl);
                        
                        // Î≥ÄÌôòÎêú Ïù¥ÎØ∏ÏßÄÎ°ú Í∏∞Ï°¥ Í≤ÄÏ¶ù Î°úÏßÅ Ïã§Ìñâ
                        validateImageDimensions(convertedFile);
                        
                        // Ìèº Ï†úÏ∂úÏö© ÌååÏùº ÍµêÏ≤¥
                        replaceFileInput(convertedFile);
                        
                        showValidationMessage('‚úÖ AIÍ∞Ä Ïó¨Í∂å Í∑úÍ≤©Ïóê ÎßûÍ≤å ÏûêÎèô Î≥ÄÌôòÌñàÏäµÎãàÎã§!', true);
                        
                    } else {
                        throw new Error('Î™®Îì† AI ÏÑúÎπÑÏä§ Î≥ÄÌôò Ïã§Ìå®');
                    }
                    
                } catch (error) {
                    console.error('AI Î≥ÄÌôò Ïò§Î•ò:', error);
                    showValidationMessage(`AI Î≥ÄÌôò Ïã§Ìå®: ${error.message}. ÏàòÎèôÏúºÎ°ú Ï°∞Ï†ïÌï¥Ï£ºÏÑ∏Ïöî.`, false);
                    
                    // ÏõêÎ≥∏ Ïù¥ÎØ∏ÏßÄÎ°ú Í∏∞Ï°¥ Í≤ÄÏ¶ù Î°úÏßÅ Ïã§Ìñâ
                    validateImageDimensions(originalFile);
                    
                    // ÏõêÎ≥∏ Ïù¥ÎØ∏ÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞ ÌëúÏãú
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        if (photoPreview) {
                            photoPreview.src = e.target.result;
                            photoPreview.style.display = 'block';
                        }
                    };
                    reader.readAsDataURL(originalFile);
                } finally {
                    isProcessing = false;
                }
            } else {
                // AI Î≥ÄÌôò ÎπÑÌôúÏÑ±Ìôî Ïãú Í∏∞Ï°¥ Í≤ÄÏ¶ùÎßå ÏàòÌñâ
                validateImageDimensions(file);
                
                // ÏõêÎ≥∏ Ïù¥ÎØ∏ÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞ ÌëúÏãú
                const reader = new FileReader();
                reader.onload = function(e) {
                    if (photoPreview) {
                        photoPreview.src = e.target.result;
                        photoPreview.style.display = 'block';
                    }
                };
                reader.readAsDataURL(originalFile);
            }
        });
    }
});

// File inputÏùÑ ÏÉàÎ°úÏö¥ ÌååÏùºÎ°ú ÍµêÏ≤¥ÌïòÎäî Ìï®Ïàò
function replaceFileInput(newFile) {
    const profileImageInput = document.getElementById('profileImage');
    if (profileImageInput) {
        // DataTransfer Í∞ùÏ≤¥Î•º ÏÇ¨Ïö©ÌïòÏó¨ ÌååÏùº ÍµêÏ≤¥
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(newFile);
        profileImageInput.files = dataTransfer.files;
    }
}
</script>


<script>
// Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ Î©îÏãúÏßÄ ÌëúÏãú Ìï®Ïàò
function showValidationMessage(message, isValid) {
    const validationDiv = document.getElementById('photoValidation');
    
    if (validationDiv) {
        validationDiv.innerHTML = `<div class="${isValid ? 'success' : 'error'}">${message}</div>`;
    }
    alert(message);
    isValidPhoto = isValid;
    updateSubmitButtonState();
}

// Ï†úÏ∂ú Î≤ÑÌäº ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
function updateSubmitButtonState() {
    const submitButton = document.getElementById('submitBtn');
    const profileImage = document.getElementById('profileImage');
    
    if (submitButton) {
        // ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑÏù¥ ÏÑ†ÌÉùÎêòÏóàÎã§Î©¥ Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ Í≤∞Í≥ºÏóê Îî∞Îùº Í≤∞Ï†ï
        if (profileImage && profileImage.files.length > 0) {
            submitButton.disabled = !isValidPhoto;
        } else {
            // ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑÏù¥ ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏïòÎã§Î©¥ Îã§Î•∏ Ï°∞Í±¥Îì§ ÌôïÏù∏
            submitButton.disabled = false;
        }
    }
}

function validateImageDimensions(file) {
    const reader = new FileReader();
    reader.onload = function(e) {
        const img = new Image();
        img.onload = function() {
            const width = this.width;
            const height = this.height;
            
            // Ïó¨Í∂åÏÇ¨ÏßÑ ÎπÑÏú® Í≤ÄÏ¶ù (3.5:4.5)
            const expectedRatio = 3.5/4.5; // ÏïΩ 0.7778
            const actualRatio = width/height;
            const ratioTolerance = 0.1; // ÌóàÏö© Ïò§Ï∞® Ï¶ùÍ∞Ä
            
            // Í∂åÏû• Ìï¥ÏÉÅÎèÑ Í≤ÄÏ¶ù (600 DPI Í∏∞Ï§Ä)
            const recommendedWidth = Math.round(3.5 * 600 / 2.54); // ÏïΩ 827px
            const recommendedHeight = Math.round(4.5 * 600 / 2.54); // ÏïΩ 1063px
            
            // ÏµúÏÜå Ìï¥ÏÉÅÎèÑ Í≤ÄÏ¶ù (300 DPI Í∏∞Ï§Ä)
            const minWidth = Math.round(3.5 * 300 / 2.54); // ÏïΩ 413px
            const minHeight = Math.round(4.5 * 300 / 2.54); // ÏïΩ 531px
            
            if (width < minWidth || height < minHeight) {
                showValidationMessage(`Ìï¥ÏÉÅÎèÑÍ∞Ä ÎÑàÎ¨¥ ÎÇÆÏäµÎãàÎã§. ÏµúÏÜå ${minWidth}√ó${minHeight}px Ïù¥ÏÉÅÏù¥Ïñ¥Ïïº Ìï©ÎãàÎã§.`, false);
                return;
            }
            
            //if (width < recommendedWidth || height < recommendedHeight) {
            //    showValidationMessage(`Í∂åÏû• Ìï¥ÏÉÅÎèÑÎäî ${recommendedWidth}√ó${recommendedHeight}px (600 DPI) ÏûÖÎãàÎã§. ÌòÑÏû¨: ${width}√ó${height}px`, false);
            //    return;
           // }
            
            if (Math.abs(actualRatio - expectedRatio) > ratioTolerance) {
                showValidationMessage(`Ïó¨Í∂åÏÇ¨ÏßÑ ÎπÑÏú®(3.5:4.5)Ïóê ÎßûÏßÄ ÏïäÏäµÎãàÎã§. ÌòÑÏû¨ ÎπÑÏú®: ${actualRatio.toFixed(3)}`, false);
                return;
            }
            
            // ÏñºÍµ¥ ÌÅ¨Í∏∞ Í≤ÄÏ¶ù Ï∂îÍ∞Ä
            //validateFaceSize(img, width, height);
        };
        img.src = e.target.result;
        
        // ÎØ∏Î¶¨Î≥¥Í∏∞ ÌëúÏãú
        const photoPreview = document.getElementById('photoPreview');
        if (photoPreview) {
            photoPreview.src = e.target.result;
            photoPreview.style.display = 'block';
        }
    };
    reader.readAsDataURL(file);
}



//Î∞∞Í≤ΩÏÉâ Í≤ÄÏ¶ù - Îçî ÏóÑÍ≤©Ìïú Í∏∞Ï§Ä
function validateBackgroundColor(img, width, height) {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    canvas.width = width;
    canvas.height = height;
    
    ctx.drawImage(img, 0, 0);
    
    // Î∞∞Í≤Ω ÏòÅÏó≠ ÏÉòÌîåÎßÅ (Í∞ÄÏû•ÏûêÎ¶¨ ÏòÅÏó≠)
    const samplePoints = [];
    
    // ÏÉÅÎã® Í∞ÄÏû•ÏûêÎ¶¨
    for (let x = 0; x < width; x += 10) {
        samplePoints.push(ctx.getImageData(x, 0, 1, 1).data);
    }
    
    // ÌïòÎã® Í∞ÄÏû•ÏûêÎ¶¨
    for (let x = 0; x < width; x += 10) {
        samplePoints.push(ctx.getImageData(x, height-1, 1, 1).data);
    }
    
    // Ï¢åÏö∞ Í∞ÄÏû•ÏûêÎ¶¨
    for (let y = 0; y < height; y += 10) {
        samplePoints.push(ctx.getImageData(0, y, 1, 1).data);
        samplePoints.push(ctx.getImageData(width-1, y, 1, 1).data);
    }
    
    let whitePixelCount = 0;
    const threshold = 240; // Îçî ÏóÑÍ≤©Ìïú Ìù∞ÏÉâ Í∏∞Ï§Ä
    
    samplePoints.forEach(pixel => {
        const [r, g, b] = pixel;
        if (r >= threshold && g >= threshold && b >= threshold) {
            whitePixelCount++;
        }
    });
    
    const whiteRatio = whitePixelCount / samplePoints.length;
    
    if (whiteRatio < 0.8) {
        showValidationMessage('Î∞∞Í≤ΩÏù¥ Ï∂©Î∂ÑÌûà Ìù∞ÏÉâÏù¥ ÏïÑÎãôÎãàÎã§. ÏôÑÏ†ÑÌïú Ìù∞ÏÉâ Î∞∞Í≤ΩÏùÑ ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî.', false);
        return;
    }
    
    showValidationMessage('Ïó¨Í∂åÏÇ¨ÏßÑ Í∑úÍ≤©Ïóê Ï†ÅÌï©Ìï©ÎãàÎã§.', true);
}


async function convertWithIdPhotoAI(file) {
    try {
        // API ÌÇ§ Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
        if (IDPHOTO_API_CONFIG.apiKey === 'YOUR_API_KEY') {
            throw new Error('IdPhoto.AI API ÌÇ§Í∞Ä ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
        }
        
        const imageBase64 = await fileToBase64(file);
        
        const requestBody = {
        	apiKey: f8qfQmSMPkXz3MA9,
            apiSecret: 7Z1bK0YSCwQnq2Oz5JxldDmtA8bpXq9qMR7DdKnPwd6Z9uyj5opSJv8Nw7ltsC9g,
            imageBase64: imageBase64,
            specCode: IDPHOTO_API_CONFIG.specCode
        };

        const response = await fetch(IDPHOTO_API_CONFIG.endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        });

        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`API Ìò∏Ï∂ú Ïã§Ìå®: ${response.status} - ${errorText}`);
        }

        const result = await response.json();
        
        if (result.issues && result.issues.length > 0) {
            console.warn('ÏÇ¨ÏßÑ ÌíàÏßà Î¨∏Ï†ú:', result.issues);
            // Í≤ΩÍ≥†Îßå ÌëúÏãúÌïòÍ≥† Í≥ÑÏÜç ÏßÑÌñâ
        }

        return result.idPhotoUrl;
        
    } catch (error) {
        console.error('IdPhoto.AI API Ïò§Î•ò:', error);
        throw error;
    }
}
</script>


</body>

</html>